[{"/Users/zachrizzo/programing/node.js react app/react_app/src/App.test.js":"1","/Users/zachrizzo/programing/node.js react app/react_app/src/api/carChargeHistory.js":"2","/Users/zachrizzo/programing/node.js react app/react_app/src/api/userCar.js":"3","/Users/zachrizzo/programing/node.js react app/react_app/src/api/users.js":"4","/Users/zachrizzo/programing/node.js react app/react_app/src/components/chargeHistoryCard.js":"5","/Users/zachrizzo/programing/node.js react app/react_app/src/components/cyberTruck.jsx":"6","/Users/zachrizzo/programing/node.js react app/react_app/src/components/dropDownMenu.js":"7","/Users/zachrizzo/programing/node.js react app/react_app/src/components/header.js":"8","/Users/zachrizzo/programing/node.js react app/react_app/src/components/inputBox.js":"9","/Users/zachrizzo/programing/node.js react app/react_app/src/components/loginModal.js":"10","/Users/zachrizzo/programing/node.js react app/react_app/src/components/mainButton.js":"11","/Users/zachrizzo/programing/node.js react app/react_app/src/components/menuButton.js":"12","/Users/zachrizzo/programing/node.js react app/react_app/src/components/segmentSelector.js":"13","/Users/zachrizzo/programing/node.js react app/react_app/src/components/tesla.js":"14","/Users/zachrizzo/programing/node.js react app/react_app/src/components/tesla_car.jsx":"15","/Users/zachrizzo/programing/node.js react app/react_app/src/pages/_app.js":"16","/Users/zachrizzo/programing/node.js react app/react_app/src/pages/index.js":"17","/Users/zachrizzo/programing/node.js react app/react_app/src/reportWebVitals.js":"18","/Users/zachrizzo/programing/node.js react app/react_app/src/setupTests.js":"19"},{"size":276,"mtime":1698675758953,"results":"20","hashOfConfig":"21"},{"size":1112,"mtime":1698348273013,"results":"22","hashOfConfig":"21"},{"size":1175,"mtime":1698333848551,"results":"23","hashOfConfig":"21"},{"size":1533,"mtime":1698251002911,"results":"24","hashOfConfig":"21"},{"size":569,"mtime":1698613817326,"results":"25","hashOfConfig":"21"},{"size":1611,"mtime":1698607758278,"results":"26","hashOfConfig":"21"},{"size":1404,"mtime":1698612830719,"results":"27","hashOfConfig":"21"},{"size":3423,"mtime":1698620646319,"results":"28","hashOfConfig":"21"},{"size":318,"mtime":1698079430106,"results":"29","hashOfConfig":"21"},{"size":2752,"mtime":1698601035112,"results":"30","hashOfConfig":"21"},{"size":295,"mtime":1698078840196,"results":"31","hashOfConfig":"21"},{"size":366,"mtime":1698076769113,"results":"32","hashOfConfig":"21"},{"size":2173,"mtime":1698611925204,"results":"33","hashOfConfig":"21"},{"size":4363,"mtime":1698608466892,"results":"34","hashOfConfig":"21"},{"size":27288,"mtime":1698608545132,"results":"35","hashOfConfig":"21"},{"size":257,"mtime":1698675421546,"results":"36","hashOfConfig":"21"},{"size":4516,"mtime":1698622837121,"results":"37","hashOfConfig":"21"},{"size":362,"mtime":1697753776617,"results":"38","hashOfConfig":"21"},{"size":241,"mtime":1697753776617,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"u22cal",{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":5,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/zachrizzo/programing/node.js react app/react_app/src/App.test.js",[],[],"/Users/zachrizzo/programing/node.js react app/react_app/src/api/carChargeHistory.js",[],[],"/Users/zachrizzo/programing/node.js react app/react_app/src/api/userCar.js",[],[],"/Users/zachrizzo/programing/node.js react app/react_app/src/api/users.js",[],[],"/Users/zachrizzo/programing/node.js react app/react_app/src/components/chargeHistoryCard.js",[],[],"/Users/zachrizzo/programing/node.js react app/react_app/src/components/cyberTruck.jsx",["102"],[],"/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\nCommand: npx gltfjsx@6.1.4 scene.gltf --transform\nAuthor: Arion Digital (https://sketchfab.com/andrewswihart)\nLicense: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)\nSource: https://sketchfab.com/3d-models/cyber-truck-1f5174e78fd549a8be8f7ae622caa223\nTitle: Cyber Truck\n*/\n\nimport React, { useRef } from \"react\";\nimport { useGLTF } from \"@react-three/drei\";\n\nexport function CyberTruck(props) {\n  const { nodes, materials } = useGLTF(\"/cyber_truck.glb\");\n  return (\n    <group {...props} castShadow={true} receiveShadow={true} dispose={null}>\n      <group position={[-5, -0.5, 5]} rotation={[0, 0.45, 0]} scale={0.02}>\n        <group position={[0, 0, 0]}>\n          <mesh\n            geometry={nodes.updated_tire001_Tire_0.geometry}\n            material={materials.Tire}\n          />\n          <mesh\n            geometry={nodes.updated_tire001_Rims_0.geometry}\n            material={materials.Rims}\n          />\n          <mesh\n            geometry={nodes.updated_tire001_Undercarag_0.geometry}\n            material={materials.Undercarag}\n          />\n          <mesh\n            geometry={nodes.updated_tire001_Body_0.geometry}\n            material={materials.Body}\n          />\n          <mesh\n            geometry={nodes.updated_tire001_Headlights_0.geometry}\n            material={materials.Headlights}\n          />\n          <mesh\n            geometry={nodes.updated_tire001_Glass_0.geometry}\n            material={materials.Glass}\n          />\n        </group>\n      </group>\n    </group>\n  );\n}\n\nuseGLTF.preload(\"/scene-transformed.glb\");\n","/Users/zachrizzo/programing/node.js react app/react_app/src/components/dropDownMenu.js",["103","104"],[],"import React, { useRef, useEffect } from \"react\";\nimport MenuButton from \"./menuButton\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setIsAuthenticated,\n  setJwtToken,\n  setUser,\n  selectIsAuthenticated,\n  selectUser,\n} from \"../../redux/globalSlice\";\n\nexport default function DropDownMenu({ setOpenMenu, setShowLoginModal }) {\n  const dispatch = useDispatch();\n  const isAuthenticated = useSelector(selectIsAuthenticated);\n  const user = useSelector(selectUser);\n\n  return (\n    <div className=\"bg-white z-50 w-[130px] flex justify-center items-center flex-col p-4 shadow-md rounded-[20px]\">\n      <div className=\" hover:scale-110 duration-500 flex-col w-[98%] rounded-lg shadow-lg flex justify-center items-center\">\n        <h4 className=\" text-sm text-[#7e7e7eed]\">Welcome,</h4>\n        <h5>{user?.first_name}!</h5>\n      </div>\n      {!isAuthenticated ? (\n        <MenuButton\n          buttonText={\"Login\"}\n          onClick={() => {\n            setShowLoginModal(true);\n            setOpenMenu(false);\n          }}\n        />\n      ) : (\n        <MenuButton\n          buttonText={\"Logout\"}\n          onClick={() => {\n            dispatch(setJwtToken(null));\n            dispatch(setUser(null));\n            dispatch(setIsAuthenticated(false));\n            localStorage.removeItem(\"jwtToken\");\n            setOpenMenu(false);\n          }}\n        />\n      )}\n    </div>\n  );\n}\n","/Users/zachrizzo/programing/node.js react app/react_app/src/components/header.js",[],[],"/Users/zachrizzo/programing/node.js react app/react_app/src/components/inputBox.js",[],[],"/Users/zachrizzo/programing/node.js react app/react_app/src/components/loginModal.js",["105","106"],[],"import React, { useState } from \"react\";\nimport InputBox from \"./inputBox\";\nimport { XMarkIcon } from \"@heroicons/react/24/solid\";\nimport MainButton from \"./mainButton\";\nimport { loginUser } from \"../api/users\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setJwtToken,\n  setIsAuthenticated,\n  setUser,\n  selectIsAuthenticated,\n} from \"../../redux/globalSlice\";\nimport jwtDecode from \"jwt-decode\";\n\nexport default function LoginModal({ onClose }) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const [error, setError] = useState(null);\n\n  const dispatch = useDispatch();\n  const isAuthenticated = useSelector(selectIsAuthenticated);\n\n  const handleLogin = async () => {\n    try {\n      const { token } = await loginUser({\n        email: email,\n        password: password,\n      });\n\n      dispatch(setJwtToken(token));\n      dispatch(setIsAuthenticated(true));\n\n      console.log(\"Login successful:\", token);\n      onClose();\n    } catch (error) {\n      console.error(\"Login failed:\", error);\n      setError(\"Login failed. Please try again.\");\n    }\n  };\n\n  return (\n    <div className=\"fixed inset-0 z-50 flex justify-center items-center bg-gray-700 bg-opacity-50\">\n      <div className=\"bg-white p-8 rounded-lg shadow-lg w-96 h-auto flex flex-col justify-center items-center relative\">\n        {isAuthenticated && (\n          <XMarkIcon\n            className=\"w-8 h-8 text-red-500 absolute top-4 left-4 cursor-pointer\"\n            onClick={onClose} // Call the onClose function when the X icon is clicked\n          />\n        )}\n        <h4 className=\"mb-4 text-center\">Login Modal</h4>\n\n        <div className=\"mb-4 w-full\">\n          <label\n            htmlFor=\"username\"\n            className=\"block text-sm font-medium text-gray-700 text-center\"\n          >\n            Username\n          </label>\n          <InputBox\n            id=\"email\"\n            onChange={(e) => {\n              setEmail(e.target.value);\n            }}\n            placeholder=\"Enter your email\"\n          />\n        </div>\n\n        <div className=\"mb-4 w-full\">\n          <label\n            htmlFor=\"password\"\n            className=\"block text-sm font-medium text-gray-700 text-center\"\n          >\n            Password\n          </label>\n          <InputBox\n            type={\"password\"}\n            id=\"password\"\n            onChange={(e) => {\n              setPassword(e.target.value);\n            }}\n            placeholder=\"Enter your password\"\n          />\n        </div>\n        {error && <p className=\"text-red-500 mt-2\">{error}</p>}\n        <MainButton\n          buttonText={\"Login\"}\n          onClick={() => {\n            handleLogin();\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n","/Users/zachrizzo/programing/node.js react app/react_app/src/components/mainButton.js",[],[],"/Users/zachrizzo/programing/node.js react app/react_app/src/components/menuButton.js",[],[],"/Users/zachrizzo/programing/node.js react app/react_app/src/components/segmentSelector.js",[],[],"/Users/zachrizzo/programing/node.js react app/react_app/src/components/tesla.js",["107","108","109","110","111","112","113","114","115"],[],"import React, { Suspense } from \"react\";\nimport * as THREE from \"three\";\nimport { Canvas } from \"@react-three/fiber\";\nimport {\n  OrbitControls,\n  Environment,\n  Lightformer,\n  Float,\n  useGLTF,\n  MeshReflectorMaterial,\n} from \"@react-three/drei\";\nimport { TeslaModel3 } from \"./tesla_car\";\nimport { CyberTruck } from \"./cyberTruck\";\n// import { DirectionalLight } from \"three\";\nexport default function Tesla({ selectedCar }) {\n  console.log(\"selectedCar\", selectedCar);\n  return (\n    // <Suspense fallback={null}>\n    <Canvas shadows camera={{ position: [10, 10, 10] }}>\n      <ambientLight intensity={2} />\n      <directionalLight\n        intensity={10}\n        position={[0, 0, 5]}\n        castShadow\n        shadow-mapSize={2048}\n        shadow-bias={-0.0001}\n      />\n      {/* <directionalLight\n        intensity={10}\n        position={[5, 0, 5]}\n        castShadow\n        shadow-mapSize={2048}\n        shadow-bias={-0.0001}\n      /> */}\n      <pointLight castShadow position={[0, 0, 5]} intensity={10} />\n      <OrbitControls\n        rotate\n        enableZoom={false}\n        enablePan={false}\n        enableRotate={true}\n        minPolarAngle={Math.PI / -30}\n        maxPolarAngle={Math.PI / 2.3}\n      />\n      {selectedCar === \"Tesla Model 3\" ? <TeslaModel3 /> : <CyberTruck />}\n\n      <mesh\n        receiveShadow={true}\n        castShadow={true}\n        position={[-2.2, -2.2, -2.2]}\n        rotation-x={-Math.PI / 2}\n      >\n        <planeGeometry\n          args={[100, 100]}\n          castShadow={true}\n          receiveShadow={true}\n        />\n\n        <MeshReflectorMaterial\n          envMapIntensity={0}\n          dithering={true}\n          color={[9, 9, 9]}\n          roughness={0.7}\n          blur={[1000, 400]}\n          mixBlur={30}\n          mixStrength={80}\n          mixContrast={1}\n          resolution={1024}\n          mirror={0}\n          depthScale={0.01}\n          minDepthThreshold={0.9}\n          maxDepthThreshold={1}\n          depthToBlurRatioBias={0.25}\n          reflectorOffset={0.2}\n        />\n        {/* <meshPhysicalMaterial  color={[9, 9, 9]} /> */}\n      </mesh>\n\n      {/* cube */}\n      {/* <mesh castShadow receiveShadow position={[0, 5, 0]}>\n        <boxGeometry args={[1, 1, 1]} />\n        <meshStandardMaterial color=\"#f0f0f0\" />\n      </mesh> */}\n      {/* <Environment files={\"path_to_your_hdri.hdr\"} background /> */}\n    </Canvas>\n    // </Suspense>\n  );\n}\n\nfunction Lightformers({ positions = [2, 0, 2, 0, 2, 0, 2, 0] }) {\n  const group = useRef();\n  useFrame(\n    (state, delta) =>\n      (group.current.position.z += delta * 10) > 20 &&\n      (group.current.position.z = -60)\n  );\n  return (\n    <>\n      {/* Ceiling */}\n      <Lightformer\n        intensity={0.75}\n        rotation-x={Math.PI / 2}\n        position={[0, 5, -9]}\n        scale={[10, 10, 1]}\n      />\n      <group rotation={[0, 0.5, 0]}>\n        <group ref={group}>\n          {positions.map((x, i) => (\n            <Lightformer\n              key={i}\n              form=\"circle\"\n              intensity={2}\n              rotation={[Math.PI / 2, 0, 0]}\n              position={[x, 4, i * 4]}\n              scale={[3, 1, 1]}\n            />\n          ))}\n        </group>\n      </group>\n      {/* Sides */}\n      <Lightformer\n        intensity={4}\n        rotation-y={Math.PI / 2}\n        position={[-5, 1, -1]}\n        scale={[20, 0.1, 1]}\n      />\n      <Lightformer\n        rotation-y={Math.PI / 2}\n        position={[-5, -1, -1]}\n        scale={[20, 0.5, 1]}\n      />\n      <Lightformer\n        rotation-y={-Math.PI / 2}\n        position={[10, 1, 0]}\n        scale={[20, 1, 1]}\n      />\n      {/* Accent (red) */}\n      <Float speed={5} floatIntensity={2} rotationIntensity={2}>\n        <Lightformer\n          form=\"ring\"\n          color=\"red\"\n          intensity={1}\n          scale={10}\n          position={[-15, 4, -18]}\n          target={[0, 0, 0]}\n        />\n      </Float>\n      {/* Background */}\n      <mesh scale={100}>\n        <sphereGeometry args={[1, 64, 64]} />\n        <LayerMaterial side={THREE.BackSide}>\n          <Color color=\"#444\" alpha={1} mode=\"normal\" />\n          <Depth\n            colorA=\"blue\"\n            colorB=\"black\"\n            alpha={0.5}\n            mode=\"normal\"\n            near={0}\n            far={300}\n            origin={[100, 100, 100]}\n          />\n        </LayerMaterial>\n      </mesh>\n    </>\n  );\n}\n","/Users/zachrizzo/programing/node.js react app/react_app/src/components/tesla_car.jsx",[],[],"/Users/zachrizzo/programing/node.js react app/react_app/src/pages/_app.js",[],[],"/Users/zachrizzo/programing/node.js react app/react_app/src/pages/index.js",["116","117"],[],"import React, { useState, useEffect } from \"react\";\nimport { getUserById } from \"../api/users\";\nimport { getUserCarsByUserId } from \"../api/usercar\";\nimport { getChargeHistoryById } from \"../api/carChargeHistory\";\n\nimport Header from \"../components/header\";\nimport LoginModal from \"../components/loginModal\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectIsAuthenticated, selectJwtToken } from \"../../redux/globalSlice\";\nimport jwtDecode from \"jwt-decode\";\nimport SegmentSelector from \"../components/segmentSelector\";\nimport ChargeHistoryCard from \"../components/chargeHistoryCard\";\nimport Tesla from \"../components/Tesla\";\n\nfunction App() {\n  const [user, setUser] = useState([]);\n  const [userCars, setUserCars] = useState([]);\n  const [showLogin, setShowLogin] = useState(false);\n  const dispatch = useDispatch();\n  const jwtToken = useSelector(selectJwtToken);\n  const [selectedCar, setSelectedCar] = useState(userCars[0]);\n  const [carChargingHistory, setCarChargingHistory] = useState([]);\n  const isAuthenticated = useSelector(selectIsAuthenticated);\n  const [total, setTotal] = useState(0);\n\n  //   get current user with user id in redux\n  useEffect(() => {\n    if (jwtToken) {\n      const decodedToken = jwtDecode(jwtToken);\n\n      const fetchUser = async () => {\n        const user = await getUserById(decodedToken.id);\n        setUser(user);\n      };\n      const getUserCar = async () => {\n        const userCar = await getUserCarsByUserId(decodedToken.id);\n\n        setUserCars(userCar);\n        if (userCar.length > 0) {\n          //check if car model is duplicate from fake data\n          // if yes, remove it\n          userCar.forEach((car, index) => {\n            if (index > 0) {\n              if (car.model === userCar[0].model) {\n                userCar.splice(index, 1);\n              } else if (car.model === userCar[1].model) {\n                userCar.splice(index, 1);\n              } else if (car.model === userCar[2].model) {\n                userCar.splice(index, 1);\n              }\n            }\n          });\n        }\n        setSelectedCar(userCar[0]);\n      };\n      fetchUser();\n      getUserCar();\n    }\n  }, [jwtToken]);\n\n  useEffect(() => {\n    if (userCars.length > 0 && selectedCar !== null) {\n      setTotal(0);\n      const fetchChargeHistory = async () => {\n        const chargeHistory = await getChargeHistoryById(selectedCar.id);\n        setCarChargingHistory(chargeHistory);\n        chargeHistory.forEach((history) => {\n          setTotal((prev) => prev + history.price);\n        });\n      };\n      fetchChargeHistory();\n    }\n  }, [userCars, selectedCar]);\n\n  return (\n    <div className=\"flex bg-[#ffffff25]  h-full w-full flex-col justify-center items-center\">\n      <Header setShowLoginModal={setShowLogin} />\n\n      {showLogin && <LoginModal onClose={() => setShowLogin(false)} />}\n      <div className=\"flex h-[95vh] w-full flex-col-reverse justify-center items-center  md:flex-row \">\n        <div className=\"w-full md:w-[20%]  md:overflow-y-scroll h-[53%] flex items-center flex-col md:h-[95%]\">\n          {carChargingHistory.length > 0 &&\n            carChargingHistory.map((history) => {\n              return <ChargeHistoryCard chargeHistory={history} />;\n            })}\n        </div>\n        <div className=\"w-full h-[67%] md:h-full  \">\n          <div className=\" w-full  h-[80%] md:h-[70%]\">\n            <div className=\" h-[20%] justify-center items-center flex\">\n              {userCars.length > 0 && (\n                <SegmentSelector\n                  options={userCars}\n                  setSelectedCar={setSelectedCar}\n                />\n              )}\n            </div>\n            {isAuthenticated && (\n              <div className=\"h-[75%]\">\n                <Tesla\n                  selectedCar={\n                    selectedCar ? selectedCar.model : \"Tesla Model 3\"\n                  }\n                />\n              </div>\n            )}\n          </div>\n          <div className=\" flex  justify-center items-center  h-[20%] w-full md:h-[20%]\">\n            <div className=\" bg-[#acacac36] mt-1 rounded-lg flex-row flex justify-center items-center  h-[60%] md:w-[40%] w-[90%]\">\n              <h2 className=\"mx-2\">Miles: 20,000</h2>\n              <h2 className=\"mx-2\">\n                Total: <span className=\"text-green-500\">${total}</span>\n              </h2>\n              <h2 className=\"mx-2\">Total KWh: 100,000</h2>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/zachrizzo/programing/node.js react app/react_app/src/reportWebVitals.js",[],[],"/Users/zachrizzo/programing/node.js react app/react_app/src/setupTests.js",[],[],{"ruleId":"118","severity":1,"message":"119","line":10,"column":17,"nodeType":"120","messageId":"121","endLine":10,"endColumn":23},{"ruleId":"118","severity":1,"message":"119","line":1,"column":17,"nodeType":"120","messageId":"121","endLine":1,"endColumn":23},{"ruleId":"118","severity":1,"message":"122","line":1,"column":25,"nodeType":"120","messageId":"121","endLine":1,"endColumn":34},{"ruleId":"118","severity":1,"message":"123","line":10,"column":3,"nodeType":"120","messageId":"121","endLine":10,"endColumn":10},{"ruleId":"118","severity":1,"message":"124","line":13,"column":8,"nodeType":"120","messageId":"121","endLine":13,"endColumn":17},{"ruleId":"118","severity":1,"message":"125","line":1,"column":17,"nodeType":"120","messageId":"121","endLine":1,"endColumn":25},{"ruleId":"118","severity":1,"message":"126","line":6,"column":3,"nodeType":"120","messageId":"121","endLine":6,"endColumn":14},{"ruleId":"118","severity":1,"message":"127","line":9,"column":3,"nodeType":"120","messageId":"121","endLine":9,"endColumn":10},{"ruleId":"118","severity":1,"message":"128","line":89,"column":10,"nodeType":"120","messageId":"121","endLine":89,"endColumn":22},{"ruleId":"129","severity":2,"message":"130","line":90,"column":17,"nodeType":"120","messageId":"131","endLine":90,"endColumn":23},{"ruleId":"129","severity":2,"message":"132","line":91,"column":3,"nodeType":"120","messageId":"131","endLine":91,"endColumn":11},{"ruleId":"133","severity":2,"message":"134","line":150,"column":10,"nodeType":"135","messageId":"136","endLine":150,"endColumn":23},{"ruleId":"133","severity":2,"message":"137","line":151,"column":12,"nodeType":"135","messageId":"136","endLine":151,"endColumn":17},{"ruleId":"133","severity":2,"message":"138","line":152,"column":12,"nodeType":"135","messageId":"136","endLine":152,"endColumn":17},{"ruleId":"118","severity":1,"message":"139","line":16,"column":10,"nodeType":"120","messageId":"121","endLine":16,"endColumn":14},{"ruleId":"118","severity":1,"message":"140","line":19,"column":9,"nodeType":"120","messageId":"121","endLine":19,"endColumn":17},"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'setUser' is defined but never used.","'jwtDecode' is defined but never used.","'Suspense' is defined but never used.","'Environment' is defined but never used.","'useGLTF' is defined but never used.","'Lightformers' is defined but never used.","no-undef","'useRef' is not defined.","undef","'useFrame' is not defined.","react/jsx-no-undef","'LayerMaterial' is not defined.","JSXIdentifier","undefined","'Color' is not defined.","'Depth' is not defined.","'user' is assigned a value but never used.","'dispatch' is assigned a value but never used."]